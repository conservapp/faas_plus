---
- name: Create AMI from running instance and terminate instance upon completion
  hosts: localhost
  vars_files:
    - vars/custom.yml
    - vars/common.yml
    - vars/ec2.yml
    - vars/build.yml
  tasks:
    - name: Remove previous custom image (if it exists)
      ec2_ami:
        state: absent
        region: "{{ ec2.region }}"
        image_id: "{{ ec2.custom_image }}"
      failed_when: false

    - name: Create AMI from temporary instance
      ec2_ami:
        name: "faas.{{ ansible_date_time.iso8601|replace(':', '-') }}"
        state: present
        region: "{{ ec2.region }}"
        description: "slurm, NFS, supervisor, cado-nfs, msieve" 
        wait: yes
        wait_timeout: 1800
        instance_id: "{{ hostvars[groups[ami_builder.group][0]].ec2_id }}"
      register: ami_output
      tags: always

    - name: Copy the new image id to the variables file  
      lineinfile: 'dest=vars/ec2.yml state=present regexp="^    custom_image" line="    custom_image: {{ ami_output.image_id }}               # Dynamically updated when a new AMI is built using build-finish.yml. You can edit this manually too."'
      tags: custom

    - name: Copy the base image id to the variables file
      lineinfile: 'dest=vars/ec2.yml state=present regexp="^    base_image" line="    base_image: {{ ami_output.image_id }}               # Dynamically updated when a new AMI is built using build-finish.yml. You can edit this manually too."'
      tags: base

    - name: Terminate temporary instance
      ec2:
        state: absent
        region: "{{ ec2.region }}"
        instance_ids: "{{ hostvars[groups[ami_builder.group][0]].ec2_id }}"
      tags: always
